{
  "openapi" : "3.0.1",
  "info": {
    "title" : "LocalStack API Test",
    "version" : "1.0.0"
  },

  "paths" : {
    "/products/{productId}/items": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted, but some fields were dropped due to invalid inputs. Errors can be found on response message tag, beginning with \"The following fields have been dropped\".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${lambda-arn-LambdaRequestHandler}",
          "credentials": "${api-role-arn}",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "${request-template}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseTemplates": {
                "application/json": "${response-template}"
              }
            },
            ".*httpStatus\\\":400.*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "#set($errorMessage = $input.path('$.errorMessage'))\n $errorMessage"
              }
            }
          },
          "type": "aws"
        }
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startingAfter",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endingBefore",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "${lambda-arn-LambdaRequestHandler}",
          "credentials": "${api-role-arn}",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "${request-template}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseTemplates": {
                "application/json": "${response-template}"
              }
            },
            ".*httpStatus\\\":400.*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "#set($errorMessage = $input.path('$.errorMessage'))\n $errorMessage"
              }
            }
          },
          "type": "aws"
        }
      }
    }
  },
  "components": {
    "headers": {
      "accessControl": {
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "schemas": {
      "Error": {
        "type": "object"
      },
      "TransactionRequest" : {
        "type" : "object"
      },
      "TransactionResponse" : {
        "type" : "object"
      },
      "TransactionsResponse" : {
        "type" : "array"
      }
    }
  }
}